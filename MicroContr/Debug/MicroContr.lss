
MicroContr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000322  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002ce  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000322  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000354  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000080  00000000  00000000  00000390  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f61  00000000  00000000  00000410  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000090d  00000000  00000000  00001371  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005f3  00000000  00000000  00001c7e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000013c  00000000  00000000  00002274  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000004c0  00000000  00000000  000023b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000036b  00000000  00000000  00002870  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a0  00000000  00000000  00002bdb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	de d0       	rcall	.+444    	; 0x256 <main>
  9a:	17 c1       	rjmp	.+558    	; 0x2ca <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <wait>:
			spi_slaveDeSelect(0);	// Deselect display chip
			
						spi_slaveSelect(0); 		// Select display chip
			spi_write(4);  			// 	digit adress: (digit place)
			spi_write(12);			// 	digit value: 0
			spi_slaveDeSelect(0);	// Deselect display chip
  9e:	18 16       	cp	r1, r24
  a0:	19 06       	cpc	r1, r25
  a2:	6c f4       	brge	.+26     	; 0xbe <wait+0x20>
  a4:	20 e0       	ldi	r18, 0x00	; 0
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	e9 ef       	ldi	r30, 0xF9	; 249
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	31 97       	sbiw	r30, 0x01	; 1
  ae:	f1 f7       	brne	.-4      	; 0xac <wait+0xe>
  b0:	00 c0       	rjmp	.+0      	; 0xb2 <wait+0x14>
  b2:	00 00       	nop
  b4:	2f 5f       	subi	r18, 0xFF	; 255
  b6:	3f 4f       	sbci	r19, 0xFF	; 255
  b8:	82 17       	cp	r24, r18
  ba:	93 07       	cpc	r25, r19
  bc:	a9 f7       	brne	.-22     	; 0xa8 <wait+0xa>
  be:	08 95       	ret

000000c0 <spi_masterInit>:
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	87 bb       	out	0x17, r24	; 23
  c4:	bb 98       	cbi	0x17, 3	; 23
  c6:	c0 9a       	sbi	0x18, 0	; 24
  c8:	82 e5       	ldi	r24, 0x52	; 82
  ca:	8d b9       	out	0x0d, r24	; 13
  cc:	08 95       	ret

000000ce <spi_write>:
  ce:	8f b9       	out	0x0f, r24	; 15
  d0:	77 9b       	sbis	0x0e, 7	; 14
  d2:	fe cf       	rjmp	.-4      	; 0xd0 <spi_write+0x2>
  d4:	08 95       	ret

000000d6 <spi_slaveSelect>:
  d6:	98 b3       	in	r25, 0x18	; 24
  d8:	21 e0       	ldi	r18, 0x01	; 1
  da:	30 e0       	ldi	r19, 0x00	; 0
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <spi_slaveSelect+0xc>
  de:	22 0f       	add	r18, r18
  e0:	33 1f       	adc	r19, r19
  e2:	8a 95       	dec	r24
  e4:	e2 f7       	brpl	.-8      	; 0xde <spi_slaveSelect+0x8>
  e6:	20 95       	com	r18
  e8:	29 23       	and	r18, r25
  ea:	28 bb       	out	0x18, r18	; 24
  ec:	08 95       	ret

000000ee <spi_slaveDeSelect>:
  ee:	98 b3       	in	r25, 0x18	; 24
  f0:	21 e0       	ldi	r18, 0x01	; 1
  f2:	30 e0       	ldi	r19, 0x00	; 0
  f4:	02 c0       	rjmp	.+4      	; 0xfa <spi_slaveDeSelect+0xc>
  f6:	22 0f       	add	r18, r18
  f8:	33 1f       	adc	r19, r19
  fa:	8a 95       	dec	r24
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <spi_slaveDeSelect+0x8>
  fe:	29 2b       	or	r18, r25
 100:	28 bb       	out	0x18, r18	; 24
 102:	08 95       	ret

00000104 <displayDriverInit>:
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	e7 df       	rcall	.-50     	; 0xd6 <spi_slaveSelect>
 108:	89 e0       	ldi	r24, 0x09	; 9
 10a:	e1 df       	rcall	.-62     	; 0xce <spi_write>
 10c:	8f ef       	ldi	r24, 0xFF	; 255
 10e:	df df       	rcall	.-66     	; 0xce <spi_write>
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	ed df       	rcall	.-38     	; 0xee <spi_slaveDeSelect>
 114:	80 e0       	ldi	r24, 0x00	; 0
 116:	df df       	rcall	.-66     	; 0xd6 <spi_slaveSelect>
 118:	8a e0       	ldi	r24, 0x0A	; 10
 11a:	d9 df       	rcall	.-78     	; 0xce <spi_write>
 11c:	8f ef       	ldi	r24, 0xFF	; 255
 11e:	d7 df       	rcall	.-82     	; 0xce <spi_write>
 120:	80 e0       	ldi	r24, 0x00	; 0
 122:	e5 df       	rcall	.-54     	; 0xee <spi_slaveDeSelect>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	d7 df       	rcall	.-82     	; 0xd6 <spi_slaveSelect>
 128:	8b e0       	ldi	r24, 0x0B	; 11
 12a:	d1 df       	rcall	.-94     	; 0xce <spi_write>
 12c:	83 e0       	ldi	r24, 0x03	; 3
 12e:	cf df       	rcall	.-98     	; 0xce <spi_write>
 130:	80 e0       	ldi	r24, 0x00	; 0
 132:	dd df       	rcall	.-70     	; 0xee <spi_slaveDeSelect>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	cf df       	rcall	.-98     	; 0xd6 <spi_slaveSelect>
 138:	8c e0       	ldi	r24, 0x0C	; 12
 13a:	c9 df       	rcall	.-110    	; 0xce <spi_write>
 13c:	81 e0       	ldi	r24, 0x01	; 1
 13e:	c7 df       	rcall	.-114    	; 0xce <spi_write>
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	d5 cf       	rjmp	.-86     	; 0xee <spi_slaveDeSelect>
 144:	08 95       	ret

00000146 <displayNumber>:
 146:	7f 92       	push	r7
 148:	8f 92       	push	r8
 14a:	9f 92       	push	r9
 14c:	af 92       	push	r10
 14e:	bf 92       	push	r11
 150:	cf 92       	push	r12
 152:	df 92       	push	r13
 154:	ef 92       	push	r14
 156:	ff 92       	push	r15
 158:	0f 93       	push	r16
 15a:	1f 93       	push	r17
 15c:	cf 93       	push	r28
 15e:	df 93       	push	r29
 160:	7c 01       	movw	r14, r24
 162:	aa 24       	eor	r10, r10
 164:	a3 94       	inc	r10
 166:	b1 2c       	mov	r11, r1
 168:	cc 24       	eor	r12, r12
 16a:	dd 24       	eor	r13, r13
 16c:	c8 1a       	sub	r12, r24
 16e:	d9 0a       	sbc	r13, r25
 170:	0a e0       	ldi	r16, 0x0A	; 10
 172:	10 e0       	ldi	r17, 0x00	; 0
 174:	78 2e       	mov	r7, r24
 176:	8f 2c       	mov	r8, r15
 178:	9a 2c       	mov	r9, r10
 17a:	1e 14       	cp	r1, r14
 17c:	1f 04       	cpc	r1, r15
 17e:	34 f5       	brge	.+76     	; 0x1cc <displayNumber+0x86>
 180:	f5 01       	movw	r30, r10
 182:	82 e0       	ldi	r24, 0x02	; 2
 184:	a8 16       	cp	r10, r24
 186:	b1 04       	cpc	r11, r1
 188:	84 f0       	brlt	.+32     	; 0x1aa <displayNumber+0x64>
 18a:	d7 2d       	mov	r29, r7
 18c:	c8 2d       	mov	r28, r8
 18e:	21 e0       	ldi	r18, 0x01	; 1
 190:	30 e0       	ldi	r19, 0x00	; 0
 192:	8d 2f       	mov	r24, r29
 194:	9c 2f       	mov	r25, r28
 196:	b8 01       	movw	r22, r16
 198:	71 d0       	rcall	.+226    	; 0x27c <__divmodhi4>
 19a:	d6 2f       	mov	r29, r22
 19c:	c7 2f       	mov	r28, r23
 19e:	2f 5f       	subi	r18, 0xFF	; 255
 1a0:	3f 4f       	sbci	r19, 0xFF	; 255
 1a2:	2e 17       	cp	r18, r30
 1a4:	3f 07       	cpc	r19, r31
 1a6:	a9 f7       	brne	.-22     	; 0x192 <displayNumber+0x4c>
 1a8:	02 c0       	rjmp	.+4      	; 0x1ae <displayNumber+0x68>
 1aa:	d7 2d       	mov	r29, r7
 1ac:	c8 2d       	mov	r28, r8
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	92 df       	rcall	.-220    	; 0xd6 <spi_slaveSelect>
 1b2:	89 2d       	mov	r24, r9
 1b4:	8c df       	rcall	.-232    	; 0xce <spi_write>
 1b6:	8d 2f       	mov	r24, r29
 1b8:	9c 2f       	mov	r25, r28
 1ba:	b8 01       	movw	r22, r16
 1bc:	5f d0       	rcall	.+190    	; 0x27c <__divmodhi4>
 1be:	87 df       	rcall	.-242    	; 0xce <spi_write>
 1c0:	80 e0       	ldi	r24, 0x00	; 0
 1c2:	95 df       	rcall	.-214    	; 0xee <spi_slaveDeSelect>
 1c4:	88 ee       	ldi	r24, 0xE8	; 232
 1c6:	93 e0       	ldi	r25, 0x03	; 3
 1c8:	6a df       	rcall	.-300    	; 0x9e <wait>
 1ca:	2f c0       	rjmp	.+94     	; 0x22a <displayNumber+0xe4>
 1cc:	dc 2d       	mov	r29, r12
 1ce:	cd 2d       	mov	r28, r13
 1d0:	84 e0       	ldi	r24, 0x04	; 4
 1d2:	a8 16       	cp	r10, r24
 1d4:	31 f0       	breq	.+12     	; 0x1e2 <displayNumber+0x9c>
 1d6:	f5 01       	movw	r30, r10
 1d8:	82 e0       	ldi	r24, 0x02	; 2
 1da:	a8 16       	cp	r10, r24
 1dc:	b1 04       	cpc	r11, r1
 1de:	54 f4       	brge	.+20     	; 0x1f4 <displayNumber+0xae>
 1e0:	16 c0       	rjmp	.+44     	; 0x20e <displayNumber+0xc8>
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	78 df       	rcall	.-272    	; 0xd6 <spi_slaveSelect>
 1e6:	84 e0       	ldi	r24, 0x04	; 4
 1e8:	72 df       	rcall	.-284    	; 0xce <spi_write>
 1ea:	8a e2       	ldi	r24, 0x2A	; 42
 1ec:	70 df       	rcall	.-288    	; 0xce <spi_write>
 1ee:	80 e0       	ldi	r24, 0x00	; 0
 1f0:	7e df       	rcall	.-260    	; 0xee <spi_slaveDeSelect>
 1f2:	23 c0       	rjmp	.+70     	; 0x23a <displayNumber+0xf4>
 1f4:	21 e0       	ldi	r18, 0x01	; 1
 1f6:	30 e0       	ldi	r19, 0x00	; 0
 1f8:	8d 2f       	mov	r24, r29
 1fa:	9c 2f       	mov	r25, r28
 1fc:	b8 01       	movw	r22, r16
 1fe:	3e d0       	rcall	.+124    	; 0x27c <__divmodhi4>
 200:	d6 2f       	mov	r29, r22
 202:	c7 2f       	mov	r28, r23
 204:	2f 5f       	subi	r18, 0xFF	; 255
 206:	3f 4f       	sbci	r19, 0xFF	; 255
 208:	2e 17       	cp	r18, r30
 20a:	3f 07       	cpc	r19, r31
 20c:	a9 f7       	brne	.-22     	; 0x1f8 <displayNumber+0xb2>
 20e:	80 e0       	ldi	r24, 0x00	; 0
 210:	62 df       	rcall	.-316    	; 0xd6 <spi_slaveSelect>
 212:	89 2d       	mov	r24, r9
 214:	5c df       	rcall	.-328    	; 0xce <spi_write>
 216:	8d 2f       	mov	r24, r29
 218:	9c 2f       	mov	r25, r28
 21a:	b8 01       	movw	r22, r16
 21c:	2f d0       	rcall	.+94     	; 0x27c <__divmodhi4>
 21e:	57 df       	rcall	.-338    	; 0xce <spi_write>
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	65 df       	rcall	.-310    	; 0xee <spi_slaveDeSelect>
 224:	88 ee       	ldi	r24, 0xE8	; 232
 226:	93 e0       	ldi	r25, 0x03	; 3
 228:	3a df       	rcall	.-396    	; 0x9e <wait>
 22a:	8f ef       	ldi	r24, 0xFF	; 255
 22c:	a8 1a       	sub	r10, r24
 22e:	b8 0a       	sbc	r11, r24
 230:	85 e0       	ldi	r24, 0x05	; 5
 232:	a8 16       	cp	r10, r24
 234:	b1 04       	cpc	r11, r1
 236:	09 f0       	breq	.+2      	; 0x23a <displayNumber+0xf4>
 238:	9f cf       	rjmp	.-194    	; 0x178 <displayNumber+0x32>
 23a:	df 91       	pop	r29
 23c:	cf 91       	pop	r28
 23e:	1f 91       	pop	r17
 240:	0f 91       	pop	r16
 242:	ff 90       	pop	r15
 244:	ef 90       	pop	r14
 246:	df 90       	pop	r13
 248:	cf 90       	pop	r12
 24a:	bf 90       	pop	r11
 24c:	af 90       	pop	r10
 24e:	9f 90       	pop	r9
 250:	8f 90       	pop	r8
 252:	7f 90       	pop	r7
 254:	08 95       	ret

00000256 <main>:
}



int main()
{
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
	DDRB=0x01;					// Set PB0 pin as output for display select
 25a:	81 e0       	ldi	r24, 0x01	; 1
 25c:	87 bb       	out	0x17, r24	; 23
	spi_masterInit();              	// Initialize spi module
 25e:	30 df       	rcall	.-416    	; 0xc0 <spi_masterInit>
	displayDriverInit();            // Initialize display chip
 260:	51 df       	rcall	.-350    	; 0x104 <displayDriverInit>
 262:	c6 ef       	ldi	r28, 0xF6	; 246

	for (int num = -10; num < 100; num++)
 264:	df ef       	ldi	r29, 0xFF	; 255
		displayNumber(num);
 266:	ce 01       	movw	r24, r28
 268:	6e df       	rcall	.-292    	; 0x146 <displayNumber>
 26a:	21 96       	adiw	r28, 0x01	; 1
{
	DDRB=0x01;					// Set PB0 pin as output for display select
	spi_masterInit();              	// Initialize spi module
	displayDriverInit();            // Initialize display chip

	for (int num = -10; num < 100; num++)
 26c:	c4 36       	cpi	r28, 0x64	; 100
 26e:	d1 05       	cpc	r29, r1
 270:	d1 f7       	brne	.-12     	; 0x266 <main+0x10>
 272:	81 e0       	ldi	r24, 0x01	; 1
		displayNumber(num);
		
  	return (1);
}
 274:	90 e0       	ldi	r25, 0x00	; 0
 276:	df 91       	pop	r29
 278:	cf 91       	pop	r28
 27a:	08 95       	ret

0000027c <__divmodhi4>:
 27c:	97 fb       	bst	r25, 7
 27e:	07 2e       	mov	r0, r23
 280:	16 f4       	brtc	.+4      	; 0x286 <__divmodhi4+0xa>
 282:	00 94       	com	r0
 284:	06 d0       	rcall	.+12     	; 0x292 <__divmodhi4_neg1>
 286:	77 fd       	sbrc	r23, 7
 288:	08 d0       	rcall	.+16     	; 0x29a <__divmodhi4_neg2>
 28a:	0b d0       	rcall	.+22     	; 0x2a2 <__udivmodhi4>
 28c:	07 fc       	sbrc	r0, 7
 28e:	05 d0       	rcall	.+10     	; 0x29a <__divmodhi4_neg2>
 290:	3e f4       	brtc	.+14     	; 0x2a0 <__divmodhi4_exit>

00000292 <__divmodhi4_neg1>:
 292:	90 95       	com	r25
 294:	81 95       	neg	r24
 296:	9f 4f       	sbci	r25, 0xFF	; 255
 298:	08 95       	ret

0000029a <__divmodhi4_neg2>:
 29a:	70 95       	com	r23
 29c:	61 95       	neg	r22
 29e:	7f 4f       	sbci	r23, 0xFF	; 255

000002a0 <__divmodhi4_exit>:
 2a0:	08 95       	ret

000002a2 <__udivmodhi4>:
 2a2:	aa 1b       	sub	r26, r26
 2a4:	bb 1b       	sub	r27, r27
 2a6:	51 e1       	ldi	r21, 0x11	; 17
 2a8:	07 c0       	rjmp	.+14     	; 0x2b8 <__udivmodhi4_ep>

000002aa <__udivmodhi4_loop>:
 2aa:	aa 1f       	adc	r26, r26
 2ac:	bb 1f       	adc	r27, r27
 2ae:	a6 17       	cp	r26, r22
 2b0:	b7 07       	cpc	r27, r23
 2b2:	10 f0       	brcs	.+4      	; 0x2b8 <__udivmodhi4_ep>
 2b4:	a6 1b       	sub	r26, r22
 2b6:	b7 0b       	sbc	r27, r23

000002b8 <__udivmodhi4_ep>:
 2b8:	88 1f       	adc	r24, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	5a 95       	dec	r21
 2be:	a9 f7       	brne	.-22     	; 0x2aa <__udivmodhi4_loop>
 2c0:	80 95       	com	r24
 2c2:	90 95       	com	r25
 2c4:	bc 01       	movw	r22, r24
 2c6:	cd 01       	movw	r24, r26
 2c8:	08 95       	ret

000002ca <_exit>:
 2ca:	f8 94       	cli

000002cc <__stop_program>:
 2cc:	ff cf       	rjmp	.-2      	; 0x2cc <__stop_program>
